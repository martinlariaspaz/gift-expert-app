{"version":3,"sources":["Components/AddCategory.js","helpers/getGif.js","hooks/useFetchGifs.js","Components/GifGridItem.js","Components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","cats","type","value","onChange","target","label","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACrCC,EADqC,KAC1BC,EAD0B,KAe5C,OACI,uBACAC,SAXiB,SAACC,GAElBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC9BC,QAAQC,IAAI,gBACZV,GAAc,SAAAW,GAAI,OAAIT,GAAJ,mBAAkBS,OACpCR,EAAc,MAId,UAEK,iBAAiB,uBACdS,KAAO,OACPC,MAASX,EACTY,SAnBc,SAACT,GAEvBF,EAAcE,EAAEU,OAAOF,QAkBfG,MAAQ,sB,+BCxBXC,EAAM,uCAAI,WAAOC,GAAP,uBAAAC,EAAA,4DAEP,mCACNC,EAHa,iDAGmCC,UAAUH,GAH7C,4BAEP,mCAFO,uBAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KACPhB,QAAQC,IAAIe,GACLC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,IAAD,EACA,MAAO,CACHC,GAAID,EAAIC,GACJC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZ3B,kBAeRM,GAfQ,4CAAJ,sDCuBJO,EApBM,SAACf,GACrB,IAAD,EAC8BjB,mBAC1B,CACIwB,KAAM,GACNS,SAAS,IAJjB,mBACWC,EADX,KACkBC,EADlB,KAiBI,OAXAC,qBAAU,WAENpB,EAAOC,GAAUoB,MAAK,SAAAC,GAAI,OACtBC,YAAW,WACP/B,QAAQC,IAAI6B,GACZH,EAAS,CACLX,KAAKc,EACLL,SAAS,MAEV,UACb,CAAChB,IACIiB,GCVIM,EATK,SAAC,GAAmB,EAAlBZ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC3B,OACI,sBAAKsB,UAAU,yCAAf,UACA,qBAAKC,IAAKvB,EAAKwB,IAAKd,IACpB,mBAAGY,UAAU,aAAb,SAA2BZ,QCqBpBe,EAxBC,SAAC,GAAgB,IAAf3B,EAAc,EAAdA,SAAc,EACEe,EAAaf,GAA/Ba,EADgB,EACrBN,KAAYS,EADS,EACTA,QAGnB,OAFAzB,QAAQC,IAAIwB,GAGR,qCACA,qBAAIQ,UAAW,oCAAf,UAAoDxB,EAApD,OACCgB,GAAW,mBAAGQ,UAAU,mCAAb,qBACX,qBAAKA,UAAY,YAAjB,SAIWX,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEIA,GADGA,EAAIC,aCblBiB,EAAe,WAC3B,IAAD,EACoC7C,mBAAS,CAAC,KAD9C,mBACQ8C,EADR,KACmB/C,EADnB,KAKC,OACO,qCACJ,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACI,6BAEI+C,EAAWpB,KAAI,SAAAT,GAAQ,OAClB,cAAC,EAAD,CACAA,SAAYA,GADIA,YCdjC8B,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.a651b542.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue,setInputValue] = useState('');\r\n    const handleInputChange = (e) =>\r\n    {\r\n        setInputValue(e.target.value);\r\n    }    \r\n    const handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n        console.log('Submit hecho');\r\n        setCategories(cats =>[inputValue,...cats])\r\n        setInputValue(\"\");\r\n    }\r\n    }\r\n    return (\r\n        <form \r\n        onSubmit={handleSubmit}>\r\n            {'Buscar un gif:'}<input\r\n                type = \"text\" \r\n                value = {inputValue}\r\n                onChange = { handleInputChange}\r\n                label = 'Buscar un gif'\r\n                />\r\n        </form>\r\n            \r\n            )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}","export const getGif =  async (category) => \r\n{\r\n    const api = 'b1q5kGWHwKqRuuDIbBHF34sKj5VqxurU';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=4&api_key=${api}&raiting=g`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    console.log(data);\r\n     const gifs = data.map( img => \r\n        {\r\n        return {\r\n            id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        return gifs;\r\n    }","import { useEffect, useState } from \"react\";\r\nimport { getGif } from \"../helpers/getGif\";\r\n\r\nconst useFetchGifs = (category) => \r\n{\r\n    const [state, setState] = useState(\r\n    {\r\n        data: [],\r\n        loading: true,\r\n    });\r\n    useEffect(() => \r\n    {\r\n        getGif(category).then(imgs => \r\n            setTimeout(() => {\r\n                console.log(imgs);\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false,\r\n                })\r\n                }, 3000));\r\n    },[category]) \r\n    return state; // [data:[],loading true ]\r\n}\r\nexport default useFetchGifs\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n        <img src={url} alt={title}/>\r\n        <p className='TituloFoto'>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\nconst GifGrid = ({category}) => {\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    console.log(loading);\r\n \r\n    return (\r\n        <>\r\n        <h1 className= \"animate__animated animate__fadeIn\">{category} </h1>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        {<div className = \"card-grid\">\r\n            \r\n           \r\n                {\r\n                    images.map(img=>\r\n                    <GifGridItem \r\n                    key = {img.id}\r\n                    {...img}/>\r\n                        )                        \r\n                }\r\n              \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport GifGrid from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = ()=> \r\n{\r\n  const[categories,setCategories] = useState([''])\r\n //   const categories = ['River Plate','Dragon Ball','Marvel'];\r\n\r\n \r\n return(\r\n        <>\r\n    <h2>GifExpertApp </h2>\r\n    <AddCategory setCategories={setCategories} />  \r\n    <hr />\r\n        <ol>\r\n            { \r\n            categories.map(category => (\r\n                 <GifGrid key = {category}\r\n                 category = {category}/>\r\n                 )\r\n                )\r\n            }\r\n        </ol>\r\n    </>\r\n)\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\nReactDOM.render(\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}